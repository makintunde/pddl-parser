Agent Environment
    Obsvars:
        robot_position : {store, lab, ne_room, sw_room, dep};
        open_door_d1 : boolean;
        open_door_d2 : boolean;
        open_door_d3 : boolean;
    end Obsvars
    RedStates:
    end RedStates
    Actions = {
        none
    };
    Protocol:
        Other : { none };
    end Protocol
    Evolution:
        -- MOVE UP --
        robot_position=store if ( Performer.Action=move_robot_up and robot_position=sw_room );
        robot_position=ne_room if ( Performer.Action=move_robot_up and robot_position=dep );
        robot_position=lab if ( Performer.Action=move_robot_up and robot_position=ne_room );

        -- MOVE DOWN --
        robot_position=sw_room if ( Performer.Action=move_robot_down and robot_position=store );
        robot_position=ne_room if ( Performer.Action=move_robot_down and robot_position=lab );
        robot_position=dep if ( Performer.Action=move_robot_down and robot_position=ne_room );

        -- MOVE RIGHT -- 
        robot_position=dep if ( Performer.Action=move_robot_right and robot_position=sw_room );
        robot_position=ne_room if ( Performer.Action=move_robot_right and 
                                                              robot_position=store and
                                                              open_door_d1=true and open_door_d2=true
                                                            );
        robot_position=lab if ( Performer.Action=move_robot_right and 
                                                              robot_position=store and
                                                              open_door_d1=true and open_door_d2=true
                                                            );
        robot_position=lab if ( Performer.Action=move_robot_right and 
                                robot_position=store and
                                open_door_d1=true and open_door_d2=false
                              );
        robot_position=ne_room if ( Performer.Action=move_robot_right and 
                                    robot_position=store and
                                    open_door_d1=false and open_door_d2=true
                                  );
        robot_position=sw_room if ( Performer.Action=move_robot_left and robot_position=dep );
        robot_position=store if ( Performer.Action=move_robot_left and robot_position=ne_room );
        
        -- MOVE LEFT --
        robot_position=sw_room if ( Performer.Action=move_robot_left and robot_position=dep );
        robot_position=store if ( Performer.Action=move_robot_left and robot_position=lab );
        robot_position=store if ( Performer.Action=move_robot_left and robot_position=ne_room );
    end Evolution
end Agent
Agent Performer
    Vars:
        state : { empty };
    end Vars
    Actions = {
        move_robot_up, move_robot_down, move_robot_right, move_robot_left
    };
    Protocol:
        ( Environment.robot_position=sw_room or Environment.robot_position=dep or  Environment.robot_position=ne_room ) : { move_robot_up };
        ( Environment.robot_position=store or Environment.robot_position=lab or  Environment.robot_position=ne_room ) : { move_robot_down };
        ( ( Environment.robot_position=sw_room and Environment.open_door_d3=true ) or ( Environment.robot_position=store and Environment.open_door_d2=true ) or ( Environment.robot_position=store and Environment.open_door_d1=true ) ) : { move_robot_right };
        (Environment.robot_position=dep and Environment.open_door_d3=true or Environment.robot_position=lab and Environment.open_door_d1=true or Environment.robot_position=ne_room and Environment.open_door_d2=true) : { move_robot_left };
    end Protocol
    Evolution:
        state=empty if state=empty;
    end Evolution
end Agent
Evaluation
    goal if Environment.robot_position=dep;
    may_move_left if Environment.robot_position=dep and Environment.open_door_d3=true or Environment.robot_position=lab and Environment.open_door_d1=true or Environment.robot_position=ne_room and Environment.open_door_d2=true;
    may_move_right if Environment.robot_position=sw_room and Environment.open_door_d3=true or Environment.robot_position=store and Environment.open_door_d2=true or Environment.robot_position=store and Environment.open_door_d1=true;
end Evaluation
InitStates
    Environment.robot_position=store and 
    ( Environment.open_door_d1=true or Environment.open_door_d2=true or Environment.open_door_d3=true );
end InitStates
Groups
    g1 = { Performer };
end Groups
Fairness
end Fairness
Formulae
    EF goal;
end Formulae
